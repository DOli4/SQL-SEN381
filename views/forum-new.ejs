<%- include('partials/navbar', { user }) %>

<style>
  body{ background:#f9fafb; font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,sans-serif; margin:0; padding:24px; }
  .container{ max-width:800px; margin:0 auto; }
  h1{ font-size:28px; font-weight:600; color:#1a1a1a; margin-bottom:24px; }
  .form-group{ margin-bottom:20px; }
  .form-group label{ display:block; font-weight:600; margin-bottom:8px; font-size:14px; color:#374151; }
  input[type="text"], input[type="number"], textarea{ width:100%; padding:12px; border:1px solid #d1d5db; border-radius:6px; font-size:14px; font-family:inherit; box-sizing:border-box; }
  textarea{ min-height:120px; resize:vertical; }
  .hint{ font-size:13px; color:#6b7280; margin-top:4px; }
  
  .actions{ display:flex; gap:12px; margin-top:24px; }
  .btn{ padding:12px 24px; border:none; border-radius:6px; cursor:pointer; font-weight:600; font-size:14px; }
  .btn-primary{ background:#2563eb; color:white; }
  .btn-primary:hover{ background:#1d4ed8; }
  .btn-secondary{ background:white; color:#374151; border:1px solid #d1d5db; text-decoration:none; display:inline-block; text-align:center; }
  .btn-secondary:hover{ background:#f3f4f6; }
  
  .alert{ padding:12px; border-radius:6px; margin-bottom:16px; }
  .alert-error{ background:#fee2e2; color:#991b1b; border:1px solid #fecaca; }
  .note{ background:#eff6ff; border:1px solid #bfdbfe; padding:12px; border-radius:6px; margin-bottom:20px; color:#1e40af; font-size:14px; }
</style>

<div class="container">
  <h1>Create New Topic</h1>

  <div id="alertBox"></div>

  <form id="topicForm" enctype="multipart/form-data">
    <div class="form-group">
      <label for="title">Title</label>
      <input type="text" id="title" name="title" placeholder="e.g., Exam Tips" required>
    </div>

    <div class="form-group">
      <label for="moduleId">Module</label>
      <input type="number" id="moduleId" name="moduleId" placeholder="1" required>
      <div class="hint">Use a real Module_ID (e.g., 1 for SEN381) from dbo.Modules.</div>
    </div>

    <div class="form-group">
      <label for="description">Content</label>
      <textarea id="description" name="description" placeholder="Study Guide"></textarea>
    </div>

    <div class="form-group">
      <label for="attachmentInput" class="form-label">Attachments</label>
      <input type="file" id="attachmentInput" name="files" multiple style="display:none" 
             onchange="handleFileInput(this, document.getElementById('attachmentsList'))">
      <div class="file-upload" onclick="document.getElementById('attachmentInput').click()" 
           style="border: 2px dashed #d1d5db; 
                  border-radius: 8px; 
                  padding: 24px; 
                  min-height: 160px; 
                  display: flex; 
                  flex-direction: column; 
                  justify-content: center; 
                  align-items: center; 
                  cursor: pointer;
                  background-color: #f9fafb;
                  transition: all 0.2s ease;">
        <div style="width: 48px;
                    height: 48px;
                    border-radius: 50%;
                    background-color: #e5e7eb;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    margin-bottom: 16px;
                    font-size: 24px;
                    color: #6b7280;
                    transition: all 0.2s ease;">+</div>
        <div style="font-weight: 600; 
                    font-size: 16px;
                    margin-bottom: 8px;
                    color: #374151;">Click to upload files</div>
        <div style="font-size: 14px; 
                    color: #6b7280;
                    text-align: center;">PDFs, images, documents<br>(max 10MB each)</div>
      </div>
      <div id="attachmentsList" class="mt-4" 
           style="background: white; 
                  border-radius: 8px;
                  padding: 16px;
                  margin-top: 16px;">
        <p class="empty" style="text-align: center; color: #9ca3af;">No files attached</p>
      </div>
    </div>
    
    <style>
      .file-upload:hover {
        border-color: #2563eb;
        background-color: #f0f7ff;
      }
      .file-upload:hover > div:first-child {
        background-color: #2563eb;
        color: white;
        transform: scale(1.1);
      }
    </style>

    <div class="actions">
      <button type="submit" class="btn btn-primary">Submit</button>
      <a href="/forum" class="btn btn-secondary">Cancel</a>
    </div>
  </form>
</div>

<script>
  const form = document.getElementById('topicForm');
  const alertBox = document.getElementById('alertBox');

  function showAlert(message) {
    alertBox.innerHTML = `<div class="alert alert-error">${escapeHtml(message)}</div>`;
    setTimeout(() => alertBox.innerHTML = '', 5000);
  }

  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    alertBox.innerHTML = '';

    const titleValue = document.getElementById('title').value.trim();
    const moduleIdValue = document.getElementById('moduleId').value.trim();
    const descriptionValue = document.getElementById('description').value.trim();

    console.log('=== FORM SUBMISSION DEBUG ===');
    console.log('Title:', titleValue);
    console.log('Module:', moduleIdValue);
    console.log('Description:', descriptionValue);

    if (!titleValue) {
      showAlert('Title is required');
      return;
    }

    if (!moduleIdValue) {
      showAlert('Module is required');
      return;
    }

    const payload = {
      title: titleValue,
      moduleId: moduleIdValue,
      description: descriptionValue
    };

    console.log('Payload to send:', payload);

    try {
      console.log('Sending POST to /api/topics...');
      
      const res = await fetch('/api/topics', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'same-origin',
        body: JSON.stringify(payload)
      });

      console.log('Response status:', res.status);
      const responseText = await res.text();
      console.log('Response text:', responseText);

      if (!res.ok) {
        let errorMsg = 'Failed to create topic';
        try {
          const errorJson = JSON.parse(responseText);
          errorMsg = errorJson.error || responseText;
          console.error('Error from server:', errorJson);
        } catch {
          errorMsg = responseText;
          console.error('Raw error:', responseText);
        }
        throw new Error(errorMsg);
      }

      const data = JSON.parse(responseText);
      console.log('Success! Created topic:', data);
      
      if (!data.Topic_ID) {
        throw new Error('No topic ID returned from server'); 
      }

      console.log('Redirecting to /forum/' + data.Topic_ID);
      window.location.href = `/forum/${data.Topic_ID}`;
    } catch (err) {
      console.error('=== ERROR ===');
      console.error(err);
      showAlert(err.message || 'Failed to create topic');
    }
  });
</script>