```ejs
<% /* ================================================================
     View: CRUD landing page
     Purpose:
       - Let the user choose a CRUD operation (view/insert/update/delete)
         and the target table from a predefined whitelist.
       - Posts to /crud/build which renders the operation-specific form.
     Notes:
       - The "tables" array is provided by the server route and contains:
           { fq: 'schema.[Table]', pretty: 'Human name' }
       - Keep option values (op, table) unchanged; the server relies on
         these exact field names to build SQL safely.
     ================================================================= */ %>

<% /* Header: title and link to switch to the SQL scripts editor panel */ %>
<div class="d-flex align-items-center justify-content-between mb-3">
  <h2 class="m-0">Quick CRUD</h2>
  <a class="btn btn-outline-secondary" href="/panel">Scripts mode</a>
</div>

<% /* Wizard step: choose operation and target table, then proceed to the detail form */ %>
<form method="post" action="/crud/build" class="card p-3 shadow-sm">
  <div class="row g-3">
    <% /* CRUD operation selector (View/Insert/Update/Delete) */ %>
    <div class="col-md-4">
      <label class="form-label">Operation</label>
      <select name="op" class="form-select" required>
        <option value="view">View (SELECT)</option>
        <option value="insert">Insert</option>
        <option value="update">Update</option>
        <option value="delete">Delete</option>
      </select>
      <% /* Implementation detail:
           - "op" is consumed by /crud/build to decide which form fields to render.
           - Do not localize option values; only the labels may be changed. */ %>
    </div>

    <% /* Table selector: options come from the server-provided whitelist `tables` */ %>
    <div class="col-md-8">
      <label class="form-label">Table</label>
      <select name="table" class="form-select" required>
        <% tables.forEach(t => { %>
          <option value="<%= t.fq %>"><%= t.pretty %></option>
        <% }) %>
      </select>
      <% /* Implementation detail:
           - Option value is the fully qualified table name (schema + bracketed table).
           - The server parses this to look up column metadata and keys.
           - Keep the name="table" attribute unchanged. */ %>
    </div>
  </div>

  <% /* Submit advances to /crud/build which renders the appropriate form for the chosen op/table */ %>
  <div class="mt-3">
    <button class="btn btn-primary">Next</button>
  </div>
</form>
```
